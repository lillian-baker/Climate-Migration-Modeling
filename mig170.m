%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: C:\Users\m210258\Documents\Firstie\Research\mig170.csv\mig170.csv
%
% Auto-generated by MATLAB on 09-Sep-2020 07:26:38

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 612, "Encoding", "UTF-8");

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["country", "commun", "surveypl", "surveyyr", "hhnum", "weight", "sex", "yrborn", "age", "placebrn", "statebrn", "marstat", "edyrs", "occ", "hhincome", "ldowage", "by", "height", "kgs", "smokes", "smoked", "smokeage", "health", "healthly", "healthnw", "hyperten", "sugar", "heart", "brain", "lung", "nerves", "cancer", "hypertyr", "sugaryr", "heartyr", "brainyr", "lungyr", "nervesyr", "canceryr", "usyr1", "usmar1", "usdur1", "usdoc1", "usplace1", "usstate1", "usocc1", "uswage1", "usby1", "usyrl", "usmarl", "usdurl", "usdocl", "usplacel", "usstatel", "usoccl", "uswagel", "usbyl", "uscurtrp", "ustrips", "usexp", "ushealth", "mxhealth", "legyrapp", "legyrrec", "legspon", "cityrapp", "cityrrec", "dacaapp", "dacarec", "crsyr1", "crspl1", "crsst1", "crshow1", "crscoy1", "crscst1", "crspay1", "crsdep1", "crsyes1", "crsyr2", "crspl2", "crsst2", "crshow2", "crscoy2", "crscst2", "crspay2", "crsdep2", "crsyes2", "crsyr3", "crspl3", "crsst3", "crshow3", "crscoy3", "crscst3", "crspay3", "crsdep3", "crsyes3", "crsyr4", "crspl4", "crsst4", "crshow4", "crscoy4", "crscst4", "crspay4", "crsdep4", "crsyes4", "crsyr5", "crspl5", "crsst5", "crshow5", "crscoy5", "crscst5", "crspay5", "crsdep5", "crsyes5", "crsyr6", "crspl6", "crsst6", "crshow6", "crscoy6", "crscst6", "crspay6", "crsdep6", "crsyes6", "crsyr7", "crspl7", "crsst7", "crshow7", "crscoy7", "crscst7", "crspay7", "crsdep7", "crsyes7", "crsyr8", "crspl8", "crsst8", "crshow8", "crscoy8", "crscst8", "crspay8", "crsdep8", "crsyes8", "crsyr9", "crspl9", "crsst9", "crshow9", "crscoy9", "crscst9", "crspay9", "crsdep9", "crsyes9", "crsyr10", "crspl10", "crsst10", "crshow10", "crscoy10", "crscst10", "crspay10", "crsdep10", "crsyes10", "crsyr11", "crspl11", "crsst11", "crshow11", "crscoy11", "crscst11", "crspay11", "crsdep11", "crsyes11", "crsyr12", "crspl12", "crsst12", "crshow12", "crscoy12", "crscst12", "crspay12", "crsdep12", "crsyes12", "crsyr13", "crspl13", "crsst13", "crshow13", "crscoy13", "crscst13", "crspay13", "crsdep13", "crsyes13", "crsyr14", "crspl14", "crsst14", "crshow14", "crscoy14", "crscst14", "crspay14", "crsdep14", "crsyes14", "crsyr15", "crspl15", "crsst15", "crshow15", "crscoy15", "crscst15", "crspay15", "crsdep15", "crsyes15", "crsyr16", "crspl16", "crsst16", "crshow16", "crscoy16", "crscst16", "crspay16", "crsdep16", "crsyes16", "crsyr17", "crspl17", "crsst17", "crshow17", "crscoy17", "crscst17", "crspay17", "crsdep17", "crsyes17", "crsyr18", "crspl18", "crsst18", "crshow18", "crscoy18", "crscst18", "crspay18", "crsdep18", "crsyes18", "crsyr19", "crspl19", "crsst19", "crshow19", "crscoy19", "crscst19", "crspay19", "crsdep19", "crsyes19", "crsyr20", "crspl20", "crsst20", "crshow20", "crscoy20", "crscst20", "crspay20", "crsdep20", "crsyes20", "crsyr21", "crspl21", "crsst21", "crshow21", "crscoy21", "crscst21", "crspay21", "crsdep21", "crsyes21", "crsyr22", "crspl22", "crsst22", "crshow22", "crscoy22", "crscst22", "crspay22", "crsdep22", "crsyes22", "crsyr23", "crspl23", "crsst23", "crshow23", "crscoy23", "crscst23", "crspay23", "crsdep23", "crsyes23", "crsyr24", "crspl24", "crsst24", "crshow24", "crscoy24", "crscst24", "crspay24", "crsdep24", "crsyes24", "crsyr25", "crspl25", "crsst25", "crshow25", "crscoy25", "crscst25", "crspay25", "crsdep25", "crsyes25", "crsyr26", "crspl26", "crsst26", "crshow26", "crscoy26", "crscst26", "crspay26", "crsdep26", "crsyes26", "crsyr27", "crspl27", "crsst27", "crshow27", "crscoy27", "crscst27", "crspay27", "crsdep27", "crsyes27", "crsyr28", "crspl28", "crsst28", "crshow28", "crscoy28", "crscst28", "crspay28", "crsdep28", "crsyes28", "crsyr29", "crspl29", "crsst29", "crshow29", "crscoy29", "crscst29", "crspay29", "crsdep29", "crsyes29", "crsyr30", "crspl30", "crsst30", "crshow30", "crscoy30", "crscst30", "crspay30", "crsdep30", "crsyes30", "momgyr", "mogree", "moyrgr", "modoc", "modoyr", "molive", "mousnw", "mouspl", "mousst", "famgyr", "fagree", "fayrgr", "fadoc", "fadoyr", "falive", "fausnw", "fauspl", "fausst", "sbsex1", "sbmgyr1", "sbgree1", "sbyrgr1", "sbdoc1", "sbdoyr1", "sblive1", "sbusnw1", "sbuspl1", "sbusst1", "sbsex2", "sbmgyr2", "sbgree2", "sbyrgr2", "sbdoc2", "sbdoyr2", "sblive2", "sbusnw2", "sbuspl2", "sbusst2", "sbsex3", "sbmgyr3", "sbgree3", "sbyrgr3", "sbdoc3", "sbdoyr3", "sblive3", "sbusnw3", "sbuspl3", "sbusst3", "sbsex4", "sbmgyr4", "sbgree4", "sbyrgr4", "sbdoc4", "sbdoyr4", "sblive4", "sbusnw4", "sbuspl4", "sbusst4", "sbsex5", "sbmgyr5", "sbgree5", "sbyrgr5", "sbdoc5", "sbdoyr5", "sblive5", "sbusnw5", "sbuspl5", "sbusst5", "sbsex6", "sbmgyr6", "sbgree6", "sbyrgr6", "sbdoc6", "sbdoyr6", "sblive6", "sbusnw6", "sbuspl6", "sbusst6", "sbsex7", "sbmgyr7", "sbgree7", "sbyrgr7", "sbdoc7", "sbdoyr7", "sblive7", "sbusnw7", "sbuspl7", "sbusst7", "sbsex8", "sbmgyr8", "sbgree8", "sbyrgr8", "sbdoc8", "sbdoyr8", "sblive8", "sbusnw8", "sbuspl8", "sbusst8", "sbsex9", "sbmgyr9", "sbgree9", "sbyrgr9", "sbdoc9", "sbdoyr9", "sblive9", "sbusnw9", "sbuspl9", "sbusst9", "sbsex10", "sbmgyr10", "sbgree10", "sbyrgr10", "sbdoc10", "sbdoyr10", "sblive10", "sbusnw10", "sbuspl10", "sbusst10", "sbsex11", "sbmgyr11", "sbgree11", "sbyrgr11", "sbdoc11", "sbdoyr11", "sblive11", "sbusnw11", "sbuspl11", "sbusst11", "sbsex12", "sbmgyr12", "sbgree12", "sbyrgr12", "sbdoc12", "sbdoyr12", "sblive12", "sbusnw12", "sbuspl12", "sbusst12", "uncinus", "uncevus", "coinus", "coevus", "neinus", "neevus", "sbilinus", "sbilevus", "chilinus", "chilevus", "pilinus", "pilevus", "frinus", "frevus", "reltrip1", "reltrip", "paistp1", "paistrip", "sport", "social", "chicanos", "blacks", "asians", "anglos", "latinos", "lodging1", "lodging", "english", "enghome", "engwork", "engfrnd", "engneig", "howjob", "hrwage", "hrweek", "monsyr", "howpaid", "sstax", "fedtx", "rowner", "rsuper", "howjobs", "hrwages", "hrweeks", "monsyrs", "howpaids", "sstaxs", "fedtxs", "rowners", "rsupers", "finhelp1", "finhelp", "bankacct", "card", "taxes", "consular", "rent", "food", "remit", "remit1", "remit2", "remit3", "remit4", "remit5", "savings", "savretrn", "savings1", "savings2", "savings3", "savings4", "savings5", "schools", "unemp", "foodst", "welfare", "afdc", "wic", "ssi", "general", "doctor", "hospital", "hlthpmt1", "hlthpmt2", "hlthpmt3", "hlthpmt4", "apppaid", "appcost", "appcurr", "visacost", "visacurr", "visawho", "doctaken", "trippaid", "tripcost", "tripcurr", "retpaid", "retcost", "retcurr", "contract", "conkept", "convio1", "convio2", "convio3", "convio4", "convio5", "transwk", "housing", "houcost", "houcurr", "houfreq", "houshare", "houpers", "houtype", "hkitchen", "hdining", "hliving", "hbath", "hrooms", "hcond", "abused", "abusewho", "abuserep", "accident", "medical", "medicpd", "localwkr", "latinwkr", "samejob", "samepay", "overtime", "overtmtp", "tempcomp", "unempben", "embassy", "unions"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "string", "double", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "double", "string", "double", "double", "double", "double", "double", "double", "double", "double", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "string", "string", "double", "double", "double", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "string", "string", "string", "string", "double", "double", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "string", "double", "double", "double", "double", "double", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "double", "double", "double", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "string", "string", "string", "string", "double", "double", "double", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["ldowage", "height", "kgs", "smokes", "smoked", "smokeage", "health", "healthly", "healthnw", "hyperten", "sugar", "heart", "brain", "lung", "nerves", "cancer", "hypertyr", "sugaryr", "heartyr", "brainyr", "lungyr", "nervesyr", "canceryr", "usmar1", "usmarl", "ushealth", "mxhealth", "cityrapp", "cityrrec", "dacaapp", "dacarec", "mogree", "moyrgr", "modoc", "modoyr", "mouspl", "mousst", "fagree", "fayrgr", "fadoc", "fadoyr", "fauspl", "fausst", "sbgree1", "sbyrgr1", "sbdoc1", "sbdoyr1", "sbuspl1", "sbusst1", "sbgree2", "sbyrgr2", "sbdoc2", "sbdoyr2", "sbuspl2", "sbusst2", "sbgree3", "sbyrgr3", "sbdoc3", "sbdoyr3", "sbuspl3", "sbusst3", "sbgree4", "sbyrgr4", "sbdoc4", "sbdoyr4", "sbuspl4", "sbusst4", "sbgree5", "sbyrgr5", "sbdoc5", "sbdoyr5", "sbuspl5", "sbusst5", "sbgree6", "sbyrgr6", "sbdoc6", "sbdoyr6", "sbuspl6", "sbusst6", "sbgree7", "sbyrgr7", "sbdoc7", "sbdoyr7", "sbuspl7", "sbusst7", "sbgree8", "sbyrgr8", "sbdoc8", "sbdoyr8", "sbuspl8", "sbusst8", "sbgree9", "sbyrgr9", "sbdoc9", "sbdoyr9", "sbuspl9", "sbusst9", "sbgree10", "sbyrgr10", "sbdoc10", "sbdoyr10", "sbuspl10", "sbusst10", "sbgree11", "sbyrgr11", "sbdoc11", "sbdoyr11", "sbuspl11", "sbusst11", "sbgree12", "sbyrgr12", "sbdoc12", "sbdoyr12", "sbuspl12", "sbusst12", "chilinus", "chilevus", "pilinus", "pilevus", "asians", "enghome", "engwork", "engfrnd", "engneig", "rowner", "rsuper", "howjobs", "hrwages", "hrweeks", "monsyrs", "howpaids", "sstaxs", "fedtxs", "rowners", "rsupers", "card", "taxes", "consular", "afdc", "wic", "ssi", "general", "hlthpmt2", "hlthpmt3", "hlthpmt4", "apppaid", "appcost", "appcurr", "visacost", "visacurr", "visawho", "doctaken", "trippaid", "tripcost", "tripcurr", "retpaid", "retcost", "retcurr", "contract", "conkept", "convio1", "convio2", "convio3", "convio4", "convio5", "transwk", "housing", "houcost", "houcurr", "houfreq", "houshare", "houpers", "houtype", "hkitchen", "hdining", "hliving", "hbath", "hrooms", "hcond", "abused", "abusewho", "abuserep", "accident", "medical", "medicpd", "localwkr", "latinwkr", "samejob", "samepay", "overtime", "overtmtp", "tempcomp", "unempben", "embassy", "unions"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["ldowage", "height", "kgs", "smokes", "smoked", "smokeage", "health", "healthly", "healthnw", "hyperten", "sugar", "heart", "brain", "lung", "nerves", "cancer", "hypertyr", "sugaryr", "heartyr", "brainyr", "lungyr", "nervesyr", "canceryr", "usmar1", "usmarl", "ushealth", "mxhealth", "cityrapp", "cityrrec", "dacaapp", "dacarec", "mogree", "moyrgr", "modoc", "modoyr", "mouspl", "mousst", "fagree", "fayrgr", "fadoc", "fadoyr", "fauspl", "fausst", "sbgree1", "sbyrgr1", "sbdoc1", "sbdoyr1", "sbuspl1", "sbusst1", "sbgree2", "sbyrgr2", "sbdoc2", "sbdoyr2", "sbuspl2", "sbusst2", "sbgree3", "sbyrgr3", "sbdoc3", "sbdoyr3", "sbuspl3", "sbusst3", "sbgree4", "sbyrgr4", "sbdoc4", "sbdoyr4", "sbuspl4", "sbusst4", "sbgree5", "sbyrgr5", "sbdoc5", "sbdoyr5", "sbuspl5", "sbusst5", "sbgree6", "sbyrgr6", "sbdoc6", "sbdoyr6", "sbuspl6", "sbusst6", "sbgree7", "sbyrgr7", "sbdoc7", "sbdoyr7", "sbuspl7", "sbusst7", "sbgree8", "sbyrgr8", "sbdoc8", "sbdoyr8", "sbuspl8", "sbusst8", "sbgree9", "sbyrgr9", "sbdoc9", "sbdoyr9", "sbuspl9", "sbusst9", "sbgree10", "sbyrgr10", "sbdoc10", "sbdoyr10", "sbuspl10", "sbusst10", "sbgree11", "sbyrgr11", "sbdoc11", "sbdoyr11", "sbuspl11", "sbusst11", "sbgree12", "sbyrgr12", "sbdoc12", "sbdoyr12", "sbuspl12", "sbusst12", "chilinus", "chilevus", "pilinus", "pilevus", "asians", "enghome", "engwork", "engfrnd", "engneig", "rowner", "rsuper", "howjobs", "hrwages", "hrweeks", "monsyrs", "howpaids", "sstaxs", "fedtxs", "rowners", "rsupers", "card", "taxes", "consular", "afdc", "wic", "ssi", "general", "hlthpmt2", "hlthpmt3", "hlthpmt4", "apppaid", "appcost", "appcurr", "visacost", "visacurr", "visawho", "doctaken", "trippaid", "tripcost", "tripcurr", "retpaid", "retcost", "retcurr", "contract", "conkept", "convio1", "convio2", "convio3", "convio4", "convio5", "transwk", "housing", "houcost", "houcurr", "houfreq", "houshare", "houpers", "houtype", "hkitchen", "hdining", "hliving", "hbath", "hrooms", "hcond", "abused", "abusewho", "abuserep", "accident", "medical", "medicpd", "localwkr", "latinwkr", "samejob", "samepay", "overtime", "overtmtp", "tempcomp", "unempben", "embassy", "unions"], "EmptyFieldRule", "auto");

% Import the data
migration170 = readtable("C:\Users\m210258\Documents\Firstie\Research\mig170.csv\mig170.csv", opts);

%Extract data for years of 1st migration
year = migration170(:, 'usyr1');
year = sortrows(year);  %sort the year vector earliest to most recent
year = table2array(year); %turn table into a vector
histogram(year, 'BinLimits', [1900,2020], 'BinWidth', 1)

%% Clear temporary variables
clear opts